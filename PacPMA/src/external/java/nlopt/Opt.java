/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nlopt;

public class Opt {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Opt(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Opt obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(Opt obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NLoptJNI.delete_Opt(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Opt() {
    this(NLoptJNI.new_Opt__SWIG_0(), true);
  }

  public Opt(Algorithm a, long n) {
    this(NLoptJNI.new_Opt__SWIG_1(a.swigValue(), n), true);
  }

  public Opt(String algo_str, long n) {
    this(NLoptJNI.new_Opt__SWIG_2(algo_str, n), true);
  }

  public Opt(Opt f) {
    this(NLoptJNI.new_Opt__SWIG_3(Opt.getCPtr(f), f), true);
  }

  public DoubleVector optimize(DoubleVector x0) {
    return new DoubleVector(NLoptJNI.Opt_optimize(swigCPtr, this, DoubleVector.getCPtr(x0), x0), true);
  }

  public Result lastOptimizeResult() {
    return Result.swigToEnum(NLoptJNI.Opt_lastOptimizeResult(swigCPtr, this));
  }

  public double lastOptimumValue() {
    return NLoptJNI.Opt_lastOptimumValue(swigCPtr, this);
  }

  public Algorithm getAlgorithm() {
    return Algorithm.swigToEnum(NLoptJNI.Opt_getAlgorithm(swigCPtr, this));
  }

  public String getAlgorithmName() {
    return NLoptJNI.Opt_getAlgorithmName(swigCPtr, this);
  }

  public long getDimension() {
    return NLoptJNI.Opt_getDimension(swigCPtr, this);
  }

  public void setMinObjective(Func f) {
    NLoptJNI.Opt_setMinObjective(swigCPtr, this, f);
  }

  public void setMaxObjective(Func f) {
    NLoptJNI.Opt_setMaxObjective(swigCPtr, this, f);
  }

  public void removeInequalityConstraints() {
    NLoptJNI.Opt_removeInequalityConstraints(swigCPtr, this);
  }

  public void removeEqualityConstraints() {
    NLoptJNI.Opt_removeEqualityConstraints(swigCPtr, this);
  }

  public void addInequalityConstraint(Func f, double tol) {
    NLoptJNI.Opt_addInequalityConstraint__SWIG_0(swigCPtr, this, f, tol);
  }

  public void addInequalityConstraint(Func f) {
    NLoptJNI.Opt_addInequalityConstraint__SWIG_1(swigCPtr, this, f);
  }

  public void addEqualityConstraint(Func f, double tol) {
    NLoptJNI.Opt_addEqualityConstraint__SWIG_0(swigCPtr, this, f, tol);
  }

  public void addEqualityConstraint(Func f) {
    NLoptJNI.Opt_addEqualityConstraint__SWIG_1(swigCPtr, this, f);
  }

  public void addInequalityMconstraint(MFunc mf, DoubleVector tol) {
    NLoptJNI.Opt_addInequalityMconstraint(swigCPtr, this, mf, DoubleVector.getCPtr(tol), tol);
  }

  public void addEqualityMconstraint(MFunc mf, DoubleVector tol) {
    NLoptJNI.Opt_addEqualityMconstraint(swigCPtr, this, mf, DoubleVector.getCPtr(tol), tol);
  }

  public void setParam(String name, double val) {
    NLoptJNI.Opt_setParam(swigCPtr, this, name, val);
  }

  public double getParam(String name, double defaultval) {
    return NLoptJNI.Opt_getParam(swigCPtr, this, name, defaultval);
  }

  public boolean hasParam(String name) {
    return NLoptJNI.Opt_hasParam(swigCPtr, this, name);
  }

  public String nthParam(long n) {
    return NLoptJNI.Opt_nthParam(swigCPtr, this, n);
  }

  public long numParams() {
    return NLoptJNI.Opt_numParams(swigCPtr, this);
  }

  public void setLowerBounds(double val) {
    NLoptJNI.Opt_setLowerBounds__SWIG_0(swigCPtr, this, val);
  }

  public void getLowerBounds(DoubleVector v) {
    NLoptJNI.Opt_getLowerBounds__SWIG_0(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public DoubleVector getLowerBounds() {
    return new DoubleVector(NLoptJNI.Opt_getLowerBounds__SWIG_1(swigCPtr, this), true);
  }

  public void setLowerBounds(DoubleVector v) {
    NLoptJNI.Opt_setLowerBounds__SWIG_1(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public void setUpperBounds(double val) {
    NLoptJNI.Opt_setUpperBounds__SWIG_0(swigCPtr, this, val);
  }

  public void getUpperBounds(DoubleVector v) {
    NLoptJNI.Opt_getUpperBounds__SWIG_0(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public DoubleVector getUpperBounds() {
    return new DoubleVector(NLoptJNI.Opt_getUpperBounds__SWIG_1(swigCPtr, this), true);
  }

  public void setUpperBounds(DoubleVector v) {
    NLoptJNI.Opt_setUpperBounds__SWIG_1(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public double getStopval() {
    return NLoptJNI.Opt_getStopval(swigCPtr, this);
  }

  public void setStopval(double stopval) {
    NLoptJNI.Opt_setStopval(swigCPtr, this, stopval);
  }

  public double getFtolRel() {
    return NLoptJNI.Opt_getFtolRel(swigCPtr, this);
  }

  public void setFtolRel(double ftol_rel) {
    NLoptJNI.Opt_setFtolRel(swigCPtr, this, ftol_rel);
  }

  public double getFtolAbs() {
    return NLoptJNI.Opt_getFtolAbs(swigCPtr, this);
  }

  public void setFtolAbs(double ftol_abs) {
    NLoptJNI.Opt_setFtolAbs(swigCPtr, this, ftol_abs);
  }

  public double getXtolRel() {
    return NLoptJNI.Opt_getXtolRel(swigCPtr, this);
  }

  public void setXtolRel(double xtol_rel) {
    NLoptJNI.Opt_setXtolRel(swigCPtr, this, xtol_rel);
  }

  public void setXtolAbs(double val) {
    NLoptJNI.Opt_setXtolAbs__SWIG_0(swigCPtr, this, val);
  }

  public void getXtolAbs(DoubleVector v) {
    NLoptJNI.Opt_getXtolAbs__SWIG_0(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public DoubleVector getXtolAbs() {
    return new DoubleVector(NLoptJNI.Opt_getXtolAbs__SWIG_1(swigCPtr, this), true);
  }

  public void setXtolAbs(DoubleVector v) {
    NLoptJNI.Opt_setXtolAbs__SWIG_1(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public void setXWeights(double val) {
    NLoptJNI.Opt_setXWeights__SWIG_0(swigCPtr, this, val);
  }

  public void getXWeights(DoubleVector v) {
    NLoptJNI.Opt_getXWeights__SWIG_0(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public DoubleVector getXWeights() {
    return new DoubleVector(NLoptJNI.Opt_getXWeights__SWIG_1(swigCPtr, this), true);
  }

  public void setXWeights(DoubleVector v) {
    NLoptJNI.Opt_setXWeights__SWIG_1(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public int getMaxeval() {
    return NLoptJNI.Opt_getMaxeval(swigCPtr, this);
  }

  public void setMaxeval(int maxeval) {
    NLoptJNI.Opt_setMaxeval(swigCPtr, this, maxeval);
  }

  public int getNumevals() {
    return NLoptJNI.Opt_getNumevals(swigCPtr, this);
  }

  public double getMaxtime() {
    return NLoptJNI.Opt_getMaxtime(swigCPtr, this);
  }

  public void setMaxtime(double maxtime) {
    NLoptJNI.Opt_setMaxtime(swigCPtr, this, maxtime);
  }

  public int getForceStop() {
    return NLoptJNI.Opt_getForceStop(swigCPtr, this);
  }

  public void setForceStop(int force_stop) {
    NLoptJNI.Opt_setForceStop(swigCPtr, this, force_stop);
  }

  public void forceStop() {
    NLoptJNI.Opt_forceStop(swigCPtr, this);
  }

  public String getErrmsg() {
    return NLoptJNI.Opt_getErrmsg(swigCPtr, this);
  }

  public void setLocalOptimizer(Opt lo) {
    NLoptJNI.Opt_setLocalOptimizer(swigCPtr, this, Opt.getCPtr(lo), lo);
  }

  public long getPopulation() {
    return NLoptJNI.Opt_getPopulation(swigCPtr, this);
  }

  public void setPopulation(long population) {
    NLoptJNI.Opt_setPopulation(swigCPtr, this, population);
  }

  public long getVectorStorage() {
    return NLoptJNI.Opt_getVectorStorage(swigCPtr, this);
  }

  public void setVectorStorage(long vector_storage) {
    NLoptJNI.Opt_setVectorStorage(swigCPtr, this, vector_storage);
  }

  public void setInitialStep(double val) {
    NLoptJNI.Opt_setInitialStep__SWIG_0(swigCPtr, this, val);
  }

  public void setInitialStep(DoubleVector v) {
    NLoptJNI.Opt_setInitialStep__SWIG_1(swigCPtr, this, DoubleVector.getCPtr(v), v);
  }

  public void setDefaultInitialStep(DoubleVector x) {
    NLoptJNI.Opt_setDefaultInitialStep(swigCPtr, this, DoubleVector.getCPtr(x), x);
  }

  public DoubleVector getInitialStep(DoubleVector x) {
    return new DoubleVector(NLoptJNI.Opt_getInitialStep(swigCPtr, this, DoubleVector.getCPtr(x), x), true);
  }

  public boolean getExceptionsEnabled() {
    return NLoptJNI.Opt_getExceptionsEnabled(swigCPtr, this);
  }

  public void setExceptionsEnabled(boolean enable) {
    NLoptJNI.Opt_setExceptionsEnabled(swigCPtr, this, enable);
  }

    public static interface Func {
      public double apply(double[] x, double[] gradient);
    }

    public static interface MFunc {
      public double[] apply(double[] x, double[] gradient);
    }
  
}
